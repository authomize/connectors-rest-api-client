{
  "openapi": "3.0.2",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/is_alive": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Is Alive",
        "description": "Service status.",
        "operationId": "is_alive_is_alive_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsAliveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Me",
        "description": "API status.",
        "operationId": "me_v1_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}": {
      "get": {
        "tags": [
          "connectors"
        ],
        "summary": "Retrieve",
        "description": "Retrieve connector by {connectorId}.",
        "operationId": "retrieve_v1_connectors__connectorId__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiConnectorSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors": {
      "get": {
        "tags": [
          "connectors"
        ],
        "summary": "Search",
        "description": "Search connectors.",
        "operationId": "search_v1_connectors_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiConnectorListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "connectors"
        ],
        "summary": "Post",
        "description": "Create new connector.",
        "operationId": "post_v1_connectors_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRestApiConnectorSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiConnectorSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}/transactions": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Search",
        "description": "Search transactions of a connector.",
        "operationId": "search_v1_connectors__connectorId__transactions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TransactionStateType"
            },
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionPaginatedSearchSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Create",
        "description": "Create new transaction of a connector.",
        "operationId": "create_v1_connectors__connectorId__transactions_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Retrieve",
        "description": "Retrieve transaction of a connector by {transactionId}.",
        "operationId": "retrieve_v1_connectors__connectorId__transactions__transactionId__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Transactionid",
              "type": "string"
            },
            "name": "transactionId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}/transactions/{transactionId}/apply": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Apply",
        "description": "Apply a transaction.",
        "operationId": "apply_v1_connectors__connectorId__transactions__transactionId__apply_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Transactionid",
              "type": "string"
            },
            "name": "transactionId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}/transactions/{transactionId}/items": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Items",
        "description": "Append items to transaction.",
        "operationId": "items_v1_connectors__connectorId__transactions__transactionId__items_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Transactionid",
              "type": "string"
            },
            "name": "transactionId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsBundleSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}/export/{exportId}": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Retrieve",
        "description": "Download link to the connector data in archive of csv forms.",
        "operationId": "retrieve_v1_connectors__connectorId__export__exportId__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Exportid",
              "type": "string"
            },
            "name": "exportId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/connectors/{connectorId}/export": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Search",
        "description": "Download link to the connector data in archive of csv forms.",
        "operationId": "search_v1_connectors__connectorId__export_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Connectorid",
              "type": "string"
            },
            "name": "connectorId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccessDescription": {
        "title": "AccessDescription",
        "required": [
          "fromIdentityId",
          "toAssetId",
          "accessType"
        ],
        "type": "object",
        "properties": {
          "fromIdentityId": {
            "title": "Fromidentityid",
            "type": "string"
          },
          "toAssetId": {
            "title": "Toassetid",
            "type": "string"
          },
          "accessType": {
            "$ref": "#/components/schemas/CanonicalPrivilegeTypes"
          },
          "accessName": {
            "title": "Accessname",
            "type": "string"
          }
        }
      },
      "ActorType": {
        "title": "ActorType",
        "enum": [
          "Authomize",
          "User"
        ],
        "description": "Enum of actor type"
      },
      "AssetDescription": {
        "title": "AssetDescription",
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ResourceTypes"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "href": {
            "title": "Href",
            "type": "string"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "service": {
            "title": "Service",
            "type": "string"
          }
        }
      },
      "AssetsInheritance": {
        "title": "AssetsInheritance",
        "required": [
          "fromId",
          "toId"
        ],
        "type": "object",
        "properties": {
          "fromId": {
            "title": "Fromid",
            "type": "string"
          },
          "toId": {
            "title": "Toid",
            "type": "string"
          }
        }
      },
      "AvailableConnectorId": {
        "title": "AvailableConnectorId",
        "enum": [
          "aws",
          "box",
          "dropbox",
          "fileprovider",
          "github",
          "google",
          "jira",
          "microsoft-azure-ad-sp",
          "microsoft-azure",
          "okta",
          "oktaOwners",
          "restApiImport",
          "salesforce_application",
          "salesforce_account",
          "jiraServiceDeskItsm"
        ],
        "description": "An enumeration."
      },
      "BundleTransaction": {
        "title": "BundleTransaction",
        "required": [
          "sourceKey",
          "connectorId",
          "id",
          "state"
        ],
        "type": "object",
        "properties": {
          "transactionCreatedAt": {
            "title": "Transactioncreatedat",
            "type": "string",
            "format": "date-time"
          },
          "transactionLastInsertionAt": {
            "title": "Transactionlastinsertionat",
            "type": "string",
            "format": "date-time"
          },
          "transactionUpdatedAt": {
            "title": "Transactionupdatedat",
            "type": "string",
            "format": "date-time"
          },
          "actorId": {
            "title": "Actorid",
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "sourceKey": {
            "title": "Sourcekey",
            "type": "string"
          },
          "connectorId": {
            "title": "Connectorid",
            "type": "string"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "origin": {
            "title": "Origin",
            "type": "string"
          },
          "warnings": {
            "title": "Warnings",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TransactionStateType"
          }
        }
      },
      "CanonicalPrivilegeTypes": {
        "title": "CanonicalPrivilegeTypes",
        "enum": [
          "Unknown",
          "All",
          "Owner",
          "Read",
          "ReadMetadata",
          "Write",
          "Create",
          "Delete",
          "Execute",
          "Enable",
          "Assign",
          "Restore",
          "Import",
          "Export",
          "Get",
          "Set",
          "Update",
          "Cancel",
          "Use",
          "AllowUse",
          "List",
          "Administrative",
          "Delegate",
          "Join",
          "Invite",
          "Leave",
          "Share"
        ],
        "description": "Groups of all permission types\nUsed in our product to normalize the names of permissions\nExample: \"file.write\" and \"user.write\" are going to be displayed as \"write\""
      },
      "ConnectorStatus": {
        "title": "ConnectorStatus",
        "enum": [
          "enabled",
          "disabled",
          "installable"
        ],
        "description": "An enumeration."
      },
      "ExportResponse": {
        "title": "ExportResponse",
        "required": [
          "exportId",
          "exportUrl"
        ],
        "type": "object",
        "properties": {
          "exportId": {
            "title": "Exportid",
            "type": "string"
          },
          "exportUrl": {
            "title": "Exporturl",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "IdentitiesInheritance": {
        "title": "IdentitiesInheritance",
        "required": [
          "fromId",
          "toId"
        ],
        "type": "object",
        "properties": {
          "fromId": {
            "title": "Fromid",
            "type": "string"
          },
          "toId": {
            "title": "Toid",
            "type": "string"
          }
        }
      },
      "IdentityDescription": {
        "title": "IdentityDescription",
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/IdentityTypes"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "manager": {
            "title": "Manager",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "href": {
            "title": "Href",
            "type": "string"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "terminationDate": {
            "title": "Terminationdate",
            "type": "string",
            "format": "date-time"
          },
          "isExternal": {
            "title": "Isexternal",
            "type": "boolean"
          },
          "hasTwoFactorAuthenticationEnabled": {
            "title": "Hastwofactorauthenticationenabled",
            "type": "boolean"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string"
          },
          "userName": {
            "title": "Username",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "service": {
            "title": "Service",
            "type": "string"
          }
        }
      },
      "IdentityTypes": {
        "title": "IdentityTypes",
        "enum": [
          "Identity",
          "User",
          "Group",
          "EntitlementProxy",
          "AccessKey",
          "ServiceAccount",
          "Alias",
          "Domain",
          "Organization",
          "TaskPerformer"
        ],
        "description": "An enumeration."
      },
      "IsAliveResponse": {
        "title": "IsAliveResponse",
        "required": [
          "isAlive"
        ],
        "type": "object",
        "properties": {
          "isAlive": {
            "title": "Isalive",
            "type": "boolean"
          }
        }
      },
      "ItemsBundleSchema": {
        "title": "ItemsBundleSchema",
        "required": [
          "services",
          "identities",
          "assets",
          "inheritanceIdentities",
          "inheritanceAssets",
          "access"
        ],
        "type": "object",
        "properties": {
          "services": {
            "title": "Services",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDescription"
            }
          },
          "identities": {
            "title": "Identities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDescription"
            }
          },
          "assets": {
            "title": "Assets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDescription"
            }
          },
          "inheritanceIdentities": {
            "title": "Inheritanceidentities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentitiesInheritance"
            }
          },
          "inheritanceAssets": {
            "title": "Inheritanceassets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetsInheritance"
            }
          },
          "access": {
            "title": "Access",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessDescription"
            }
          }
        }
      },
      "MeResponse": {
        "title": "MeResponse",
        "required": [
          "version",
          "id",
          "tenant"
        ],
        "type": "object",
        "properties": {
          "version": {
            "title": "Version",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "tenant": {
            "title": "Tenant",
            "type": "string"
          }
        }
      },
      "NewRestApiConnectorSchema": {
        "title": "NewRestApiConnectorSchema",
        "type": "object",
        "properties": {
          "config": {
            "title": "Config",
            "type": "object"
          },
          "serviceId": {
            "title": "Serviceid",
            "type": "string"
          }
        }
      },
      "ResourceTypes": {
        "title": "ResourceTypes",
        "enum": [
          "Resource",
          "File",
          "Folder",
          "Drive",
          "Site",
          "Application",
          "Package",
          "Project",
          "Cluster",
          "Dataset",
          "Subscription",
          "Table",
          "TableRecord",
          "Disk",
          "Image",
          "Instance",
          "Snapshot",
          "Service",
          "Topic",
          "Bucket",
          "BillingAccount",
          "Device",
          "Calendar",
          "Policy",
          "GitRepository",
          "Network",
          "Vpc",
          "NetworkInterface",
          "VirtualMachine",
          "NetworkSecurityGroup",
          "Ticket",
          "NetworkSubnet",
          "NetworkAcl",
          "RouteTable",
          "NetworkAddress",
          "Secret",
          "Storage",
          "Workspace",
          "SharedLink",
          "Collection",
          "Resource_Domain",
          "Resource_Organization",
          "Resource_Group",
          "Resource_ServiceAccount",
          "Resource_User",
          "Resource_Identity",
          "Resource_EntitlementProxy",
          "Resource_AccessKey",
          "Resource_TaskPerformer",
          "Database"
        ],
        "description": "An enumeration."
      },
      "RestApiConnectorListSchema": {
        "title": "RestApiConnectorListSchema",
        "required": [
          "pagination",
          "data"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/authomize__clients__schemas__plugins_service__plugins_service__Pagination"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestApiConnectorSchema"
            }
          }
        }
      },
      "RestApiConnectorSchema": {
        "title": "RestApiConnectorSchema",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "config": {
            "title": "Config",
            "type": "object"
          },
          "serviceId": {
            "title": "Serviceid",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string"
          },
          "lastSyncedAt": {
            "title": "Lastsyncedat",
            "type": "string"
          },
          "lastError": {
            "title": "Lasterror",
            "type": "string"
          },
          "modifiedAt": {
            "title": "Modifiedat",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConnectorStatus"
              }
            ],
            "default": "disabled"
          },
          "serviceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RestApiImportServicesType"
              }
            ],
            "default": "RestApiImport"
          },
          "availableConnectorId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableConnectorId"
              }
            ],
            "default": "restApiImport"
          },
          "actorType": {
            "title": "Actortype",
            "type": "string"
          },
          "actorId": {
            "title": "Actorid",
            "type": "string"
          }
        }
      },
      "RestApiImportServicesType": {
        "title": "RestApiImportServicesType",
        "enum": [
          "RestApiImport"
        ],
        "description": "An enumeration."
      },
      "ServiceDescription": {
        "title": "ServiceDescription",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "icon": {
            "title": "Icon",
            "type": "string"
          }
        }
      },
      "SubmitResponse": {
        "title": "SubmitResponse",
        "required": [
          "acceptedTimestamp"
        ],
        "type": "object",
        "properties": {
          "acceptedTimestamp": {
            "title": "Acceptedtimestamp",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransactionPaginatedSearchSchema": {
        "title": "TransactionPaginatedSearchSchema",
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundleTransaction"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/authomize__arango__stores__models__Pagination"
          }
        }
      },
      "TransactionStateType": {
        "title": "TransactionStateType",
        "enum": [
          "Complete",
          "Failed",
          "Ingest",
          "IngestChunk",
          "PostProcess",
          "Queue"
        ],
        "description": "An enumeration."
      },
      "TransactionType": {
        "title": "TransactionType",
        "enum": [
          "Insert"
        ],
        "description": "An enumeration."
      },
      "UserStatus": {
        "title": "UserStatus",
        "enum": [
          "Staged",
          "Enabled",
          "Disabled",
          "Suspended",
          "Deleted"
        ],
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "authomize__arango__stores__models__Pagination": {
        "title": "Pagination",
        "required": [
          "total",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          },
          "skip": {
            "title": "Skip",
            "type": "integer"
          }
        }
      },
      "authomize__clients__schemas__plugins_service__plugins_service__Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "limit": {
            "title": "Limit",
            "type": "integer",
            "default": -1
          },
          "skip": {
            "title": "Skip",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": -1
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}
